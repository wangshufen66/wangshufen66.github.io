(window.webpackJsonp=window.webpackJsonp||[]).push([[52],{426:function(t,s,a){"use strict";a.r(s);var n=a(9),e=Object(n.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"常见面试题"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#常见面试题"}},[t._v("#")]),t._v(" 常见面试题")]),t._v(" "),s("ol",[s("li",[s("p",[s("a",{attrs:{href:"https://www.yuque.com/cuggz/interview",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://www.yuque.com/cuggz/interview")])])]),t._v(" "),s("li",[s("p",[s("a",{attrs:{href:"https://www.processon.com/view/5d392c50e4b02015bd89f162#map",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://www.processon.com/view/5d392c50e4b02015bd89f162#map")])])])]),t._v(" "),s("h2",{attrs:{id:"event-loop-是什么"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#event-loop-是什么"}},[t._v("#")]),t._v(" Event Loop 是什么")]),t._v(" "),s("p",[s("code",[t._v("Event loop")]),t._v(" 是一个执行模型，浏览器和 NodeJS 基于不同的技术实现了各自的 "),s("code",[t._v("Event Loop")])]),t._v(" "),s("ul",[s("li",[t._v("宏队列")])]),t._v(" "),s("p",[t._v("一些异步任务的回调会依次进入宏队列("),s("code",[t._v("macro task queue")]),t._v(")，等待后续被调用，这些异步任务包括：")]),t._v(" "),s("ol",[s("li",[t._v("setTimeout")]),t._v(" "),s("li",[t._v("setInterval")]),t._v(" "),s("li",[t._v("requestAnimationFrame (浏览器独有)")]),t._v(" "),s("li",[t._v("setImmediate (Node 独有)")])]),t._v(" "),s("ul",[s("li",[t._v("微队列")])]),t._v(" "),s("p",[t._v("一些异步任务的回调会依次进入微队列, 这些异步任务包括：")]),t._v(" "),s("ol",[s("li",[t._v("Promise")]),t._v(" "),s("li",[t._v("process.nextTick (Node 独有)")])]),t._v(" "),s("p",[s("strong",[t._v("浏览器的 Event Loop")])]),t._v(" "),s("ol",[s("li",[s("p",[t._v("执行全局 Script 同步代码，遇到异步回调,就会放在宏队列或者微队列中")])]),t._v(" "),s("li",[s("p",[t._v("从微队列取出位于队首的任务，放入调用栈 Stack 中执行，执行完后微队列长度减 1")])]),t._v(" "),s("li",[s("p",[t._v("继续执行微队的任务，直到直到把微队列所有任务都执行完毕。\n"),s("font",{attrs:{color:"red"}},[t._v("(注意: 如果在执行过程中，又产生了微任务，那么会加入到队列的末尾，也会在这个周期被调用执行)")])],1)]),t._v(" "),s("li",[s("p",[t._v("从宏队列取出位于队首的任务，放入调用栈 Stack 中执行，执行完后宏队列长度减 1\n"),s("font",{attrs:{color:"red"}},[t._v("(注意: 执行完成后, 会先看看是否有微任务, 有会先执行微任务)")])],1)]),t._v(" "),s("li",[s("p",[t._v("重复第 2-4 个步骤")])])]),t._v(" "),s("h2",{attrs:{id:"js-闭包"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#js-闭包"}},[t._v("#")]),t._v(" js 闭包")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("形成")]),t._v(" "),s("blockquote",[s("ol",[s("li",[t._v('闭包可以简单理解成 "有一个函数 A, 它返回函数 B, 函数 B 访问了函数 A 的局部变量 C"')]),t._v(" "),s("li",[t._v("当外部的引用指向函数 A 的返回值, 那么变量 C 会不会被垃圾回收, 形成了闭包")])])])]),t._v(" "),s("li",[s("p",[t._v("作用")]),t._v(" "),s("blockquote",[s("ol",[s("li",[t._v("在本质上，闭包就是将函数内部和函数外部连接起来的桥梁。")]),t._v(" "),s("li",[t._v("局部变量无法共享和长久的保存，而全局变量可能造成变量污染，闭包既可以长久的保存变量又不会造成全局污染")])])])])]),t._v(" "),s("h2",{attrs:{id:"浏览器缓存"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#浏览器缓存"}},[t._v("#")]),t._v(" 浏览器缓存")]),t._v(" "),s("h3",{attrs:{id:"强制缓存"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#强制缓存"}},[t._v("#")]),t._v(" 强制缓存")]),t._v(" "),s("p",[t._v("跟强制缓存相关的 Response Headers 头属性有（Pragma/Cache-Control/Expires）")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("Expires: 字面意思表示的是有效期, 表示的就是一个具体的时间. 例如：Expires: Wed, Nov 11 2020 08:00:00 GMT；")])]),t._v(" "),s("li",[s("p",[t._v("Cache-Control 强缓存（http/1.1）下面是常用指令，可以组合使用")]),t._v(" "),s("ol",[s("li",[t._v("public/private：private 只有客户端（浏览器）缓存; Public 服务器缓存,就是所有客户端都可用")]),t._v(" "),s("li",[t._v("no-cache 表示不进行强缓存验证, 而是用协商缓存来验证")]),t._v(" "),s("li",[t._v("no-store 所有内容都不会被缓存, 也不进行协商缓存")]),t._v(" "),s("li",[t._v("max-age 过期时间, max-age=300 表示在 300s 后缓存内容失效")])]),t._v(" "),s("p",[t._v("例子：Cache-Control: public, max-age=300 任何客户端都可缓存, 且过期时长为 300 秒；")])]),t._v(" "),s("li",[s("p",[t._v("强制缓存 返回状态码: 200")])])]),t._v(" "),s("p",[s("strong",[t._v("Cache-Control 和 Expires 对比：")])]),t._v(" "),s("ol",[s("li",[t._v("Expires 产于 HTTP/1.0, Cache-control 产于 HTTP/1.1;")]),t._v(" "),s("li",[t._v("Expires 是一个具体的时间, Cache-control 设置具体时常还有其它的属性;")]),t._v(" "),s("li",[t._v("两者同时存在, Cache-control 的优先级更高;")]),t._v(" "),s("li",[t._v("在不支持 HTTP/1.1 的环境下, Expires 就会发挥作用")])]),t._v(" "),s("h3",{attrs:{id:"协商缓存"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#协商缓存"}},[t._v("#")]),t._v(" 协商缓存")]),t._v(" "),s("p",[t._v("如果没有使用强缓存，那么就会判断是否需要协商缓存，主要是通过文件最后修改时间是否一样，或者文件内容的哈希值是否改变，来决定。")]),t._v(" "),s("p",[t._v("如果修改时间一样，或者文件哈希值一样，那么就会返回 304 状态码，告诉浏览器可以使用缓存中的数据。否则服务器就会返回更新后的资源并且将缓存信息一起返回，这时状态码为 200")]),t._v(" "),s("p",[s("em",[s("strong",[t._v("跟协商缓存相关的 header 头属性有（ETag/If-Not-Match 、Last-Modified/If-Modified-Since）请求头和响应头需要成对出现")])])]),t._v(" "),s("h4",{attrs:{id:"last-modified-if-modified-since"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#last-modified-if-modified-since"}},[t._v("#")]),t._v(" Last-Modified / If-Modified-Since")]),t._v(" "),s("ol",[s("li",[s("p",[t._v("第一次请求这个资源，在响应体的 response header 中带上 Last-Modified, 值为该资源在服务器上最后的修改时间。浏览器收到后缓存文件和这个 header")])]),t._v(" "),s("li",[s("p",[t._v("再次请求的时候，会在请求头 request header 中带上 If-Modified-Since, 值就是 Last-Modified")])]),t._v(" "),s("li",[s("p",[t._v("根据 If-Modified-Since 与服务器的最后修改时间做对比, 相同返回 304，不同则重新获取数据，返回 200(同时返回最新的 Last-Modified)")])])]),t._v(" "),s("h4",{attrs:{id:"etag-if-none-match"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#etag-if-none-match"}},[t._v("#")]),t._v(" ETag / If-None-Match")]),t._v(" "),s("ol",[s("li",[t._v("在浏览器请求服务器资源的时候, 服务器根据当前文件的内容, 给文件生成一个唯一的标识, 若是文件发生了改变, 则这个标识就会改变")]),t._v(" "),s("li",[t._v("首次请求, 在响应体的 response header 中带上 ETag, 值就是那个唯一标识")]),t._v(" "),s("li",[t._v("再次加载该资源时, 会在请求头 request header 带上 If-None-Match,值就是上次缓存的 ETag")]),t._v(" "),s("li",[t._v("服务器接收到了之后与该资源自身的 ETag 做对比, 一致,返回 304 知会客户端直接使用本地缓存;若是不一致, 返回 200 和最新的资源文件(包括最新的 ETag)")])]),t._v(" "),s("h4",{attrs:{id:"etag-if-not-match-解决以下问题"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#etag-if-not-match-解决以下问题"}},[t._v("#")]),t._v(" ETag/If-Not-Match 解决以下问题：")]),t._v(" "),s("ol",[s("li",[t._v("Last-Modified 标注的最后修改只能精确到秒级，如果某些文件在 1 秒钟以内，被修改多次的话，它将不能准确标注文件的修改时间")]),t._v(" "),s("li",[t._v("如果某些文件被修改了，但内容并没变化，而 Last-Modified 却改变了，导致文件没法使用缓存")]),t._v(" "),s("li",[t._v("有可能存在服务器没有准确获取文件修改时间，或者与代理服务器时间不一致等情形")])]),t._v(" "),s("h2",{attrs:{id:"前端模块化"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#前端模块化"}},[t._v("#")]),t._v(" 前端模块化")]),t._v(" "),s("p",[t._v("前端早期是没有模块化的概念，只能把所有的 js 写到一个文件中，文件越写越大，于是就用几个文件去存放代码，然后依次引入，浏览器会依次加载解析执行，但是加载的文件越多，浏览器就假死时间越长，而且要严格保证加载顺序，你不知道谁在依赖谁，代码难以维护，模块化就是解决这些问题")]),t._v(" "),s("h3",{attrs:{id:"amd-requirejs"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#amd-requirejs"}},[t._v("#")]),t._v(" AMD(RequireJS)")]),t._v(" "),s("p",[t._v("AMD 即 Asynchronous Module Definition：异步模块加载")]),t._v(" "),s("ul",[s("li",[t._v("RequireJS 是一个遵守 AMD 规范的工具库，用于客户端的模块管理")])]),t._v(" "),s("ol",[s("li",[t._v("通过 define 方法，将代码定义为模块；")]),t._v(" "),s("li",[t._v("通过 require 方法，实现代码的模块加载，使用时需要下载和导入项")])]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" factories "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("define")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("moduleName"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" factory")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  factories"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("moduleName"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" factory"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("require")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("modules"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" callback")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  modules "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" modules"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("map")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("item")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" factory "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" factories"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("item"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 定义好每一个 然后把它执行")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("factory")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 执行之后返回的东西 放到modules")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("callback")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),t._v("modules"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 然后回掉函数执行这些modules")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("define")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"moduleA"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("fn")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"moduleA"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("define")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"moduleB"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("fn")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"moduleB"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("require")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"moduleB"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"moduleA"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("moduleB"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" moduleA")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  moduleB"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("fn")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  moduleA"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("fn")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("h3",{attrs:{id:"cmd-sea-js"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#cmd-sea-js"}},[t._v("#")]),t._v(" CMD (sea.js)")]),t._v(" "),s("p",[t._v("AMD 虽然实现了异步加载，但是开始的时候就会把依赖关系都整理好，可不可以向 CommonJs 一样使用的时候再加载呢？所以 CMD 就诞生了，sea.js 是比较好的实现，是依赖就近; CMD 依赖后置，我们在使用的时候才会加载，这样就可能造成一点点的延迟，这也是大部分人诟病的地方")]),t._v(" "),s("h3",{attrs:{id:"amd-和-cmd-区别"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#amd-和-cmd-区别"}},[t._v("#")]),t._v(" AMD 和 CMD 区别")]),t._v(" "),s("ol",[s("li",[t._v("AMD 是 RequireJS 在推广过程中对模块定义的规范化产出; CMD 是 SeaJS 在推广过程中对模块化定义的规范化产出:")]),t._v(" "),s("li",[t._v("对于依赖的模块，AMD 是提前执行，CMD 是延迟执行。")]),t._v(" "),s("li",[t._v("CMD 推崇依赖就近，AMD 推崇依赖前置。")])]),t._v(" "),s("h3",{attrs:{id:"commonjs-node-js"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#commonjs-node-js"}},[t._v("#")]),t._v(" CommonJs (node.js)")]),t._v(" "),s("p",[t._v("CommonJs 只能在 node 环境下支持，客户端/浏览器不支持 CommonJS 规范")]),t._v(" "),s("p",[t._v("webpack 打包工具对 CommonJS 的支持和转换；也就是前端应用也可以在编译之前，尽情使用 CommonJS 进行开发。")]),t._v(" "),s("ol",[s("li",[t._v("exports 和 module.exports 可以负责对模块中的内容进行导出；")]),t._v(" "),s("li",[t._v("require 函数可以帮助我们导入其他模块")])]),t._v(" "),s("h3",{attrs:{id:"es-module"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#es-module"}},[t._v("#")]),t._v(" ES Module")]),t._v(" "),s("p",[t._v("ES6 起，引入了一套新的 ES6 Module 规范，在语言标准的层面上实现了模块功能，而且实现得相当简单，有望成为浏览器和服务器通用的模块解决方案")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("tree-shaking")]),t._v(" "),s("p",[t._v("tree-shaking 意思是编译时去除不必要代码， ES6 Module 是静态编译, 静态编译使得在编译时就知道程序只用哪些方法，其他方法是不需要的")])]),t._v(" "),s("li",[s("p",[t._v("兼容性")]),t._v(" "),s("p",[t._v("目前浏览器对 ES6 Module 兼容还不太好，我们平时在 Webpack 中使用的 export 和 import，会经过 Babel 转换为 CommonJS 规范")])])]),t._v(" "),s("h4",{attrs:{id:"import"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#import"}},[t._v("#")]),t._v(" import()")]),t._v(" "),s("p",[t._v("import 函数出现可以解决 "),s("font",{attrs:{color:"red"}},[t._v(" import 和 export 不能出现在块级作用域内,无法动态加载 ")]),t._v("的问题")],1),t._v(" "),s("p",[t._v("vue 路由懒加载, 异步组件, 动态组件 都是基于这个原理实现")]),t._v(" "),s("h3",{attrs:{id:"commonjs-和-es-module-的区别"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#commonjs-和-es-module-的区别"}},[t._v("#")]),t._v(" CommonJs 和 ES module 的区别")]),t._v(" "),s("ol",[s("li",[t._v("CommonJS 模块输出的是一个值的拷贝，ES6 模块输出的是值的引用")]),t._v(" "),s("li",[t._v("CommonJS 模块是运行时加载; ES6 模块是编译时输出接口, 支持 tree-shaking")]),t._v(" "),s("li",[t._v("CommonJs 是单个值导出，ES6 Module 可以导出多个")]),t._v(" "),s("li",[t._v("CommonJs 是动态语法可以写在判断里，ES6 Module 静态语法只能写在顶层")]),t._v(" "),s("li",[t._v("CommonJs 的 this 是当前模块，ES6 Module 的 this 是 undefined")])]),t._v(" "),s("h4",{attrs:{id:"h5-script-标签"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#h5-script-标签"}},[t._v("#")]),t._v(" h5 script 标签")]),t._v(" "),s("p",[t._v("在 script 标签设置后，浏览器才知道是 es module ，下面是配置说明")]),t._v(" "),s("div",{staticClass:"language-html extra-class"},[s("pre",{pre:!0,attrs:{class:"language-html"}},[s("code",[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("script")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("src")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("./a.js"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("defer")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),s("span",{pre:!0,attrs:{class:"token script"}}),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("script")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("script")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("src")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("./b.js"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("async")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),s("span",{pre:!0,attrs:{class:"token script"}}),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("script")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("script")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("src")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("./c.js"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("defer")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("async")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),s("span",{pre:!0,attrs:{class:"token script"}}),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("script")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("script")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("src")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("./a.js"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("type")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("module"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),s("span",{pre:!0,attrs:{class:"token script"}}),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("script")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("script")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("type")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("module"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),s("span",{pre:!0,attrs:{class:"token script"}},[s("span",{pre:!0,attrs:{class:"token language-javascript"}},[t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"./a.js"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("script")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])])]),s("ul",[s("li",[t._v("async script：异步下载，下载成功立马执行，有可能会阻断 HTML 的解析")]),t._v(" "),s("li",[t._v("defer script：完全不会阻碍 HTML 的解析，解析完成之后再按照顺序执行脚本")]),t._v(" "),s("li",[t._v("type='module'：浏览器会异步加载，等同于 defer")])]),t._v(" "),s("h4",{attrs:{id:"nodejs-支持-es-mudule"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#nodejs-支持-es-mudule"}},[t._v("#")]),t._v(" nodejs 支持 es mudule")]),t._v(" "),s("p",[t._v("Node 既可以使用 Commonjs 也可以使用 ES Module，对于使用 ES Module 规范的文件要求后缀必须为\n"),s("code",[t._v(".mjs")]),t._v(" "),s("font",{attrs:{color:"red"}},[t._v("(require 和 import 不可以共存)")])],1),t._v(" "),s("h2",{attrs:{id:"前端跨域"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#前端跨域"}},[t._v("#")]),t._v(" 前端跨域")]),t._v(" "),s("h3",{attrs:{id:"jsonp"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#jsonp"}},[t._v("#")]),t._v(" JSONP")]),t._v(" "),s("p",[t._v("简单适用，老式浏览器全部支持，服务器改造非常小, 原理是使用 script 标签可以跨域的特点实现")]),t._v(" "),s("ol",[s("li",[t._v("网页动态插入 script 元素，由它向跨源网址发出请求，请求的查询字符串有一个 callback 参数，指定回调函数的名字")]),t._v(" "),s("li",[t._v("服务器返回 script 标签的内容，内容就是调用指定的回调函数，并且将返回数据以参数的显示传递")])]),t._v(" "),s("h3",{attrs:{id:"cors"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#cors"}},[t._v("#")]),t._v(" CORS")]),t._v(" "),s("p",[t._v('CORS 是一个 W3C 标准，全称是"跨域资源共享"（Cross-origin resource sharing）。\n它允许浏览器向跨源服务器，发出 XMLHttpRequest 请求，从而克服了 AJAX 只能同源使用的限制')]),t._v(" "),s("p",[t._v("参考："),s("a",{attrs:{href:"http://www.ruanyifeng.com/blog/2016/04/cors.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("http://www.ruanyifeng.com/blog/2016/04/cors.html")])]),t._v(" "),s("p",[t._v("CORS 需要浏览器和服务器同时支持。目前所有浏览器都支持该功能，IE 浏览器不能低于 IE10；")]),t._v(" "),s("p",[t._v("CORS 请求分成两类："),s("font",{attrs:{color:"brown"}},[t._v("简单请求")]),t._v("（simple request）和"),s("font",{attrs:{color:"brown"}},[t._v(" 非简单请求 ")]),t._v("（not-so-simple request）整个通信过程，都是浏览器自动完成。浏览器一旦发现 AJAX 请求跨源，就会自动添加一些附加的头信息，有时还会多出一次附加的请求，但用户不会有感觉")],1),t._v(" "),s("h4",{attrs:{id:"简单请求"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#简单请求"}},[t._v("#")]),t._v(" 简单请求")]),t._v(" "),s("ul",[s("li",[t._v("前提条件：")])]),t._v(" "),s("ol",[s("li",[t._v("请求方法是 HEAD， GET， POST 三种方法之一")]),t._v(" "),s("li",[t._v("HTTP 的头信息不超出以下几种字段：\n"),s("code",[t._v("Accept")]),t._v(" "),s("code",[t._v("Accept-Language")]),t._v(" "),s("code",[t._v("Content-Language")]),t._v(" "),s("code",[t._v("Last-Event-ID")]),t._v(" "),s("code",[t._v("Content-Type")]),t._v("只限于三个值\n"),s("code",[t._v("application/x-www-form-urlencoded")]),t._v(" "),s("code",[t._v("multipart/form-data")]),t._v(" "),s("code",[t._v("text/plain")])])]),t._v(" "),s("p",[s("strong",[t._v("简单请求流程")])]),t._v(" "),s("ol",[s("li",[t._v("浏览器发现是简单请求, 自动在头信息之中，添加一个 Origin 字段:")])]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("Origin: http://api.bob.com\n")])])]),s("ol",{attrs:{start:"2"}},[s("li",[t._v("服务器根据 Origin 字段判断当前域名是否在许可范围内,不在报错;在, 服务器返回的响应,会多出一些字段: 三个与 CORS 请求相关的字段，都以 Access-Control-开头:")])]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("Access-Control-Allow-Origin: http://api.bob.com\nAccess-Control-Allow-Credentials: true\nAccess-Control-Expose-Headers: FooBar\n")])])]),s("ul",[s("li",[s("p",[t._v("Access-Control-Allow-Origin:\n该字段是必须的。它的值要么是请求时 Origin 字段的值，要么是一个*，表示接受任意域名的请求;")])]),t._v(" "),s("li",[s("p",[t._v("Access-Control-Allow-Credentials:\n该字段可选。它的值是一个布尔值，表示是否允许发送 Cookie。")])]),t._v(" "),s("li",[s("p",[t._v("Access-Control-Expose-Headers:\n该字段可选。CORS 请求时，XMLHttpRequest 的 getResponseHeader()方法只能拿到 6 个基本字段：Cache-Control、Content-Language、Content-Type、Expires、Last-Modified、Pragma。如果想拿到其他字段，就要指定。上面的例子指定，getResponseHeader('FooBar')可以返回 FooBar 字段的值")])])]),t._v(" "),s("h4",{attrs:{id:"非简单请求"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#非简单请求"}},[t._v("#")]),t._v(" 非简单请求")]),t._v(" "),s("blockquote",[s("p",[t._v("比如请求方法是 PUT 或 DELETE，或者 Content-Type 字段的类型是 application/json;")])]),t._v(" "),s("p",[t._v('非简单请求会增加一次"预检"请求: 浏览器先询问服务器，当前域名是否在服务器的许可名单之中，以及可以使用哪些 HTTP 动词和头信息字段。只有得到肯定答复，浏览器才会发出正式的 XMLHttpRequest 请求，否则就报错')]),t._v(" "),s("ul",[s("li",[t._v("预请求")])]),t._v(" "),s("p",[t._v("预请求的 http 头信息:")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("Origin: http://api.bob.com\nAccess-Control-Request-Method: PUT\nAccess-Control-Request-Headers: X-Custom-Header\n")])])]),s("p",[s("code",[t._v("Access-Control-Request-Method:")]),t._v("\n该字段是必须的，用来列出浏览器的 CORS 请求会用到哪些 HTTP 方法")]),t._v(" "),s("p",[s("code",[t._v("Access-Control-Request-Headers:")]),t._v("\n指定 CORS 请求会额外发送的头信息字段")]),t._v(" "),s("p",[t._v("预请求回应:")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("HTTP/1.1 200 OK\nAccess-Control-Allow-Origin: http://api.bob.com\nAccess-Control-Allow-Methods: GET, POST, PUT\nAccess-Control-Allow-Headers: X-Custom-Header\nAccess-Control-Allow-Credentials: true\nAccess-Control-Max-Age: 1728000\n")])])]),s("p",[s("code",[t._v("Access-Control-Allow-Origin")]),t._v("\n可以请求的域名, *表示同意任意跨源请求")]),t._v(" "),s("p",[s("code",[t._v("Access-Control-Allow-Methods")]),t._v("\n表明服务器支持的所有跨域请求的方法")]),t._v(" "),s("p",[s("code",[t._v("Access-Control-Allow-Headers")]),t._v("\n表明服务器支持的所有头信息字段")]),t._v(" "),s("p",[s("code",[t._v("Access-Control-Allow-Credentials")]),t._v("\n表示是否允许发送 Cookie")]),t._v(" "),s("p",[s("code",[t._v("Access-Control-Max-Age")]),t._v("\n本次预检请求的有效期, 在有效期内，下次请求就不需要预请求")]),t._v(" "),s("ul",[s("li",[t._v("正常请求")])]),t._v(" "),s("p",[t._v('一旦服务器通过了"预检"请求，以后每次浏览器正常的 CORS 请求，就都跟简单请求一样，会有一个 Origin 头信息字段。服务器的回应，也都会有一个 Access-Control-Allow-Origin 头信息字段')]),t._v(" "),s("p",[t._v('下面是"预检"请求之后，浏览器的正常 CORS 请求')]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("Origin: http://api.bob.com\nHost: api.alice.com\nX-Custom-Header: value\nConnection: keep-alive\nUser-Agent: Mozilla/5.0...\n")])])]),s("p",[t._v("下面是服务器正常的回应:")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("Access-Control-Allow-Origin: http://api.bob.com\nContent-Type: text/html; charset=utf-8\n")])])]),s("h3",{attrs:{id:"cors-与-jsonp-的比较"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#cors-与-jsonp-的比较"}},[t._v("#")]),t._v(" CORS 与 JSONP 的比较")]),t._v(" "),s("ol",[s("li",[t._v("JSONP 只支持 GET 请求，CORS 支持所有类型的 HTTP 请求")]),t._v(" "),s("li",[t._v("JSONP 的优势在于支持老式浏览器，可以向不支持 CORS 的网站请求数据")])]),t._v(" "),s("h3",{attrs:{id:"websocket"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#websocket"}},[t._v("#")]),t._v(" websocket")]),t._v(" "),s("blockquote",[s("p",[t._v("使用 websocket 也是可以达到跨域的效果")])]),t._v(" "),s("h2",{attrs:{id:"http-和-https-区别"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#http-和-https-区别"}},[t._v("#")]),t._v(" http 和 https 区别")]),t._v(" "),s("h3",{attrs:{id:"http1-1"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#http1-1"}},[t._v("#")]),t._v(" http1.1")]),t._v(" "),s("ol",[s("li",[t._v("超文本传输协议，允许传输文本、图片、音频等，传输的类型由 Content-Type 标记")]),t._v(" "),s("li",[t._v("无状态，HTTP 请求不具备保存之前发送过的请求或响应的功能，每一次请求都是独立无关的")]),t._v(" "),s("li",[t._v("http1.1 版引入了持久连接, 即 TCP 连接默认不关闭，可以被多个请求复用")]),t._v(" "),s("li",[t._v("http1.1 版还引入了管道机制（pipelining），即在同一个 TCP 连接里面，客户端可以同时发送多个请求。这样就进一步改进了 HTTP 协议的效率。")])]),t._v(" "),s("h3",{attrs:{id:"http2"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#http2"}},[t._v("#")]),t._v(" http2")]),t._v(" "),s("ol",[s("li",[t._v("HTTP/2 则是一个彻底的二进制协议，头信息和数据体都是二进制")]),t._v(" "),s("li",[t._v('HTTP/2 复用 TCP 连接，在一个连接里，客户端可以同时发送多个请求或回应，而且不用按照顺序一一对应，这样就避免了"队头堵塞"')]),t._v(" "),s("li",[t._v("HTTP 协议不带有状态，每次请求都必须附上所有信息, HTTP/2 对这一点做了优化，引入了头信息压缩机制（header compression）")])]),t._v(" "),s("h3",{attrs:{id:"http2-和-http1-区别"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#http2-和-http1-区别"}},[t._v("#")]),t._v(" http2 和 http1 区别")]),t._v(" "),s("ol",[s("li",[t._v("h1 数据传输可以是文本或者二进制; h2 使用 ssl 加密传输协议，只能传输二进制，可防止内容被窃听")]),t._v(" "),s("li",[t._v("h1,h2 都复用 TCP 链接，一个链接可同时发送多个请求，但 h2 不用按顺序一一对应，避免队头阻塞")]),t._v(" "),s("li",[t._v("完全不同的连接方式，端口也不一样，h1 是 80，h2 是 443")]),t._v(" "),s("li",[t._v("h2 是基于 ssl + http 协议构成，可进行加密、身份认证，比 h1 安全")])]),t._v(" "),s("h2",{attrs:{id:"原型和原型链"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#原型和原型链"}},[t._v("#")]),t._v(" 原型和原型链")]),t._v(" "),s("ol",[s("li",[s("strong",[t._v("原型链")]),t._v(": 对象隐式的"),s("code",[t._v("__proto__")]),t._v("属性")]),t._v(" "),s("li",[s("strong",[t._v("原型")]),t._v(": 构造函数的 "),s("code",[t._v("prototype")]),t._v(" 属性")]),t._v(" "),s("li",[s("strong",[t._v("原型链的顶端")]),t._v(": "),s("code",[t._v("null")]),t._v(", "),s("code",[t._v("Object.prototype.__proto__ == null")]),t._v(";")])]),t._v(" "),s("ul",[s("li",[t._v("对象的 "),s("code",[t._v("__proto__")]),t._v(" 指向 "),s("code",[t._v("构造函数.prototyte")])]),t._v(" "),s("li",[s("code",[t._v("构造函数.prototyte")]),t._v(", 默认值是一个对象: "),s("code",[t._v("{ constrctor: 构造函数本身 }")])]),t._v(" "),s("li",[t._v("对象的 "),s("code",[t._v("constructor")]),t._v(" 指向 "),s("code",[t._v("它构造函数.prototyte.constrctor")])]),t._v(" "),s("li",[s("code",[t._v("构造函数.prototyte.constrctor")]),t._v(" 指向本身(默认情况下)")])]),t._v(" "),s("h3",{attrs:{id:"proto"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#proto"}},[t._v("#")]),t._v(" "),s("code",[t._v("__proto__")])]),t._v(" "),s("p",[t._v("当访问一个对象的属性时, 可能会用到对象的原型链"),s("code",[t._v("__proto__")]),t._v(" 属性, 具体流程:")]),t._v(" "),s("ol",[s("li",[t._v("会先看看对象本身是否存在该属性, 存在则返回")]),t._v(" "),s("li",[t._v("不存在, 那么就沿着原型链 "),s("code",[t._v("__proto__")]),t._v(" 一层层往上找")]),t._v(" "),s("li",[t._v("还是找不到, 就返回 "),s("code",[t._v("undefined")])])]),t._v(" "),s("h3",{attrs:{id:"prototype"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#prototype"}},[t._v("#")]),t._v(" "),s("code",[t._v("prototype")])]),t._v(" "),s("ol",[s("li",[t._v("函数上的 "),s("code",[t._v("prototype")]),t._v(" 属性叫原型;")]),t._v(" "),s("li",[t._v("函数天生就有该属性, 它的值是一个对象, 对象有个 "),s("code",[t._v("constrctor")]),t._v(" 属性指向函数本身")]),t._v(" "),s("li",[t._v("在 函数 "),s("code",[t._v("prototype")]),t._v(" 添加一些属性, 每一个实例都可以继承这些属性, 这也是这个属性的最大用处之一")])]),t._v(" "),s("h3",{attrs:{id:"new-一个函数做了什么"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#new-一个函数做了什么"}},[t._v("#")]),t._v(" new 一个函数做了什么")]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("SX")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("name "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" name"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("SB")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("SX")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"煞笔"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("ol",[s("li",[t._v("创建一个新的空对象 "),s("code",[t._v("SB = { }")])]),t._v(" "),s("li",[t._v("设置对象的原型链为构造函数的原型: "),s("code",[t._v("SB.__proto__ = SX.prototype")])]),t._v(" "),s("li",[t._v("绑定 this 为新建的空对象: "),s("code",[t._v("this = SB")]),t._v(", 然后执行构造函数:")]),t._v(" "),s("li",[t._v("如果函数没有返回值或者返回的不是引用类型, 那么就返回新对象 "),s("code",[t._v("SB")])])]),t._v(" "),s("p",[t._v("例子 1:")]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("F")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" a "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("F")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/*\n  有如下的结果 \n  1: a.constructor == F; \n  2. a.__proto__ == F.prototype \n\n  3: F.constructor == Function\n  4. F.prototype == { constructor: F }\n*/")]),t._v("\n")])])]),s("h3",{attrs:{id:"创建一个对象的方式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#创建一个对象的方式"}},[t._v("#")]),t._v(" 创建一个对象的方式")]),t._v(" "),s("ol",[s("li",[s("code",[t._v("var a = {}")])]),t._v(" "),s("li",[s("code",[t._v("var a = new Obiect()")])]),t._v(" "),s("li",[s("code",[t._v("var a = Object.create({})")]),t._v(" => "),s("code",[t._v("a.__proto__")]),t._v(" == { }")])]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" p "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" a "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Object"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("create")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("p"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\na"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("__proto__ "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" p"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\na"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("__proto__"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("__proto__ "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Object")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" b "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nb"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("__proto__ "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Object")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" c "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Object")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nc"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("__proto__ "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Object")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"custom-block-title"},[t._v("TIP")]),t._v(" "),s("ol",[s("li",[t._v("只有函数有 "),s("code",[t._v("prototype")]),t._v(" 属性, 对象是没有的")]),t._v(" "),s("li",[t._v("对象和函数都有原型链,也就是"),s("code",[t._v("__proto__")]),t._v(" 属性")]),t._v(" "),s("li",[s("code",[t._v("var a = {}")]),t._v(" 只是 "),s("code",[t._v("var a = new Obiect()")]),t._v(" 的语法糖")])])]),t._v(" "),s("h2",{attrs:{id:"js-作用域"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#js-作用域"}},[t._v("#")]),t._v(" js 作用域")]),t._v(" "),s("p",[t._v("作用域是可访问变量的集合, 作用域又分为 "),s("code",[t._v("全局作用域")]),t._v(" 和 "),s("code",[t._v("局部作用域")]),t._v(" 和 "),s("code",[t._v("块级作用域")])]),t._v(" "),s("h3",{attrs:{id:"全局作用域"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#全局作用域"}},[t._v("#")]),t._v(" 全局作用域")]),t._v(" "),s("p",[t._v("浏览器中，全局作用域被认为是 window 对象，因此所有全局变量和函数都是作为 window 对象的属性和方法创建的。")]),t._v(" "),s("h3",{attrs:{id:"局部作用域"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#局部作用域"}},[t._v("#")]),t._v(" 局部作用域")]),t._v(" "),s("p",[t._v("局部作用域其实就是函数作用域，所谓函数作用域，顾名思义就是由函数定义产生出来的作用域, 在函数中定义的变量, 只能在函数中使用, 外部不能使用")]),t._v(" "),s("h3",{attrs:{id:"块级作用域"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#块级作用域"}},[t._v("#")]),t._v(" 块级作用域")]),t._v(" "),s("p",[t._v("ES6 及之后的版本，块语句"),s("code",[t._v("（ {} 中间的语句）")]),t._v("也会创建一个新的作用域， 块级作用域可通过新增命令 "),s("code",[t._v("let")]),t._v(" 和 "),s("code",[t._v("const")]),t._v(" 声明，声明的变量只能在当前块中使用, 使用时需要注意:")]),t._v(" "),s("ol",[s("li",[t._v("不存在变量提升")]),t._v(" "),s("li",[t._v("禁止重复声明同一变量")])]),t._v(" "),s("h3",{attrs:{id:"作用域链"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#作用域链"}},[t._v("#")]),t._v(" 作用域链")]),t._v(" "),s("p",[t._v("多个作用域对象连续引用形成的链式结构, 当在 Javascript 中使用一个变量的时：")]),t._v(" "),s("div",{staticClass:"f1"},[t._v("\n  1. 首先在当前作用域下去寻找该变量，找到返回 "),s("br"),s("br"),t._v("\n  2. 如果没找到，再到它的上层作用域寻找，以此类推直到找到该变量或是已经到了全局作用域，找到返回"),s("br"),s("br"),t._v("\n  3. 如果没找到，它就会直接报错\n")]),t._v(" "),s("p",[t._v("作用域链为变量查找的机制， 变量只能在特定的区域内才能被访问，外部环境不能访问内部环境的任何变量和函数，即可以向上搜索，但不可以向下搜索")]),t._v(" "),s("h2",{attrs:{id:"前端路由"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#前端路由"}},[t._v("#")]),t._v(" 前端路由")]),t._v(" "),s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"custom-block-title"},[t._v("TIP")]),t._v(" "),s("ul",[s("li",[t._v("一般路由实现主要有 "),s("code",[t._v("history")]),t._v(" 和 "),s("code",[t._v("hash")]),t._v(" 两种方式")]),t._v(" "),s("li",[s("code",[t._v("hash")]),t._v(" 的实现全部在前端，不需要后端服务器配合，兼容性好，主要是通过监听 "),s("code",[t._v("hashchange")]),t._v(" 事件，处理前端业务逻辑")]),t._v(" "),s("li",[s("code",[t._v("history")]),t._v(" 的实现，需要服务器做以下简单的配置，通过监听 "),s("code",[t._v("pushState")]),t._v(" 及 "),s("code",[t._v("replaceState")]),t._v(" 事件，处理前端业务逻辑")])])]),t._v(" "),s("h3",{attrs:{id:"hash-哈希模式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#hash-哈希模式"}},[t._v("#")]),t._v(" hash 哈希模式")]),t._v(" "),s("p",[t._v("主要就是监听 hash 的变化，渲染不同的组件代码")]),t._v(" "),s("ul",[s("li",[t._v("hash 模式所有的工作都是在前端完成的，不需要后端服务的配合")]),t._v(" "),s("li",[t._v("hash 模式的实现方式就是通过监听 URL 中 hash 部分的变化，从而做出对应的渲染逻辑")]),t._v(" "),s("li",[t._v("hash 模式下，URL 中会带有#，看起来不太美观")])]),t._v(" "),s("h3",{attrs:{id:"history-模式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#history-模式"}},[t._v("#")]),t._v(" history 模式")]),t._v(" "),s("h4",{attrs:{id:"history"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#history"}},[t._v("#")]),t._v(" history")]),t._v(" "),s("p",[t._v("history 路由模式的实现，是要使用 history 全局对象，有如下 api：")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("window.history.go")]),t._v(" 可以跳转到浏览器会话历史中的指定的某一个记录页")]),t._v(" "),s("li",[s("code",[t._v("window.history.forward")]),t._v(" 指向浏览器会话历史中的下一页，跟浏览器的前进按钮相同")]),t._v(" "),s("li",[s("code",[t._v("window.history.back")]),t._v(" 返回浏览器会话历史中的上一页，跟浏览器的回退按钮功能相同")]),t._v(" "),s("li",[s("code",[t._v("window.history.pushState")]),t._v(" 可以将给定的数据压入到浏览器会话历史栈中")]),t._v(" "),s("li",[s("code",[t._v("window.history.replaceState")]),t._v(" 将当前的会话页面的 url 替换成指定的数据")])]),t._v(" "),s("p",[t._v("而 history 路由的实现，主要就是依靠于 pushState 与 replaceState 实现的，这里我们先总结下它们的一些特点")]),t._v(" "),s("div",{staticClass:"f1"},[t._v("\n  1. 都会改变当前页面显示的 url，但都不会刷新页面 \n  "),s("br"),s("br"),t._v("\n  2. pushState 是压入浏览器的会话历史栈中，会使得 history.length 加 1\n  "),s("br"),s("br"),t._v("\n  3. replaceState 是 替换当前的这条会话历史，因此不会增加 history.length\n")]),t._v(" "),s("h4",{attrs:{id:"popstate"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#popstate"}},[t._v("#")]),t._v(" popstate")]),t._v(" "),s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"custom-block-title"},[t._v("TIP")]),t._v(" "),s("ol",[s("li",[s("p",[t._v("每当激活同一文档中不同的历史记录条目时，popstate 事件就会在对应的 window 对象上触发。")])]),t._v(" "),s("li",[s("p",[t._v("如果当前处于激活状态的历史记录条目是由 history.pushState() 方法创建的或者是由 history.replaceState() 方法修改的，则 popstate 事件的 state 属性包含了这个历史记录条目的 state 对象的一个拷贝。")])]),t._v(" "),s("li",[s("p",[t._v("调用 history.pushState() 或者 history.replaceState() 不会触发 popstate 事件。popstate 事件只会在浏览器某些行为下触发，比如点击后退按钮（或者在 JavaScript 中调用 history.back() 方法）。即，在同一文档的两个历史记录条目之间导航会触发该事件。")])])])]),t._v(" "),s("p",[t._v("总结:")]),t._v(" "),s("ul",[s("li",[t._v("history.pushState 和 history.replaceState 方法是不会触发 popstate 事件的;\n但是浏览器的某些行为会导致 popstate，比如 go、back、forward")]),t._v(" "),s("li",[t._v("popstate 事件对象中的 state 属性，可以理解是我们在通过 history.pushState 或 history.replaceState 方法时，传入的指定的数据")])]),t._v(" "),s("h4",{attrs:{id:"重写-pushstate-replacestate"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#重写-pushstate-replacestate"}},[t._v("#")]),t._v(" 重写 pushState replaceState")]),t._v(" "),s("p",[t._v("popstate 无法监听 history.pushState 和 history.replaceState 方法，那就重新写下你这个 history.pushState 和 history.replaceState 方法吧，让你在这个方法中，也能够暴露出自定义的全局事件，然后我再监听自定义的事件，就能实现路由支持:")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("_wr")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("type")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" orig "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" history"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("type"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" rv "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("orig")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("apply")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" arguments"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" e "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Event")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("type"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    e"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("arguments "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" arguments"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    window"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("dispatchEvent")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("e"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" rv"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nhistory"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("pushState "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("_wr")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"pushState"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nhistory"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("replaceState "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("_wr")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"replaceState"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("h4",{attrs:{id:"缺陷"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#缺陷"}},[t._v("#")]),t._v(" 缺陷")]),t._v(" "),s("p",[t._v("history 模式下，如果你再跳转路由后再次刷新会得到 404 的错误，这个错误说白了就是浏览器会把整个地址当成一个可访问的静态资源路径进行访问，然后服务端并没有这个文件")]),t._v(" "),s("div",{staticClass:"f1"},[t._v("\n1. 没刷新时，只是通过 pushState 改变 URL，不刷新页面\n"),s("br"),s("br"),t._v("\n2. 一旦在某个路由下刷新页面的时候，想当于去该路径下寻找可访问的静态资源 index.html，无果，报错\n")]),t._v(" "),s("br"),t._v(" "),s("font",{attrs:{color:"red"}},[t._v("\n所以需要配置下nginx，告诉服务器，当我们访问的路径资源不存在的时候，默认指向静态资源index.html\n")]),t._v(" "),s("h2",{attrs:{id:"webpack-的构建流程"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#webpack-的构建流程"}},[t._v("#")]),t._v(" webpack 的构建流程")]),t._v(" "),s("p",[t._v("Webpack 的运⾏流程是⼀个串⾏的过程，从启动到结束会依次执⾏以下流程：")]),t._v(" "),s("div",{staticClass:"f1"},[t._v("\n1. 初始化参数：从配置⽂件和 Shell 语句中读取与合并参数，得出最终的参数；"),s("br"),s("br"),t._v("\n2. 开始编译：⽤上⼀步得到的参数初始化 Compiler 对象，加载所有配置的插件，执⾏对象的 run ⽅法开始执⾏编译；"),s("br"),s("br"),t._v("\n3. 确定⼊⼝：根据配置中的 entry 找出所有的⼊⼝⽂件；"),s("br"),s("br"),t._v("\n4. 编译模块：从⼊⼝⽂件出发，调⽤所有配置的 Loader 对模块进⾏翻译，再找出该模块依赖的模块，再递归本步骤直到所有⼊⼝依赖的⽂件都经过了本步骤的处理；"),s("br"),s("br"),t._v("\n5. 完成模块编译：在经过第 4 步使⽤ Loader 翻译完所有模块后，得到了每个模块被翻译后的最终内容以及它们之间的依赖关系；"),s("br"),s("br"),t._v("\n6. 输出资源：根据⼊⼝和模块之间的依赖关系，组装成⼀个个包含多个模块的 Chunk，再把每个 Chunk 转换成⼀个单独的⽂件加⼊到输出列表，这步是可以修改输出内容的最后机会；"),s("br"),s("br"),t._v("\n7. 输出完成：在确定好输出内容后，根据配置确定输出的路径和⽂件名，把⽂件内容写⼊到⽂件系统。\n")]),t._v(" "),s("p",[t._v("在以上过程中，Webpack 会在特定的时间点⼴播出特定的事件，插件在监听到感兴趣的事件后会执⾏特定的逻辑，并且插件可以调⽤ Webpack 提供的 API 改变 Webpack 的运⾏结果。")])],1)}),[],!1,null,null,null);s.default=e.exports}}]);